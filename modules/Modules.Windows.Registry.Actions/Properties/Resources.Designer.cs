//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PowerAutomate.Desktop.Modules.Windows.Registry.Actions.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PowerAutomate.Desktop.Modules.Windows.Registry.Actions.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set &lt;if(NAME)&gt;&lt;NAME&gt;&lt;else&gt;a value&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt; to &lt;if(BINARY)&gt;&lt;BINARY&gt;&lt;else&gt;a value&lt;endif&gt;.
        /// </summary>
        public static string Binary_Summary {
            get {
                return ResourceManager.GetString("Binary_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a registry key in the specified path..
        /// </summary>
        public static string CreateRegistryKey_Description {
            get {
                return ResourceManager.GetString("CreateRegistryKey_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create registry key.
        /// </summary>
        public static string CreateRegistryKey_FriendlyName {
            get {
                return ResourceManager.GetString("CreateRegistryKey_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the registry key..
        /// </summary>
        public static string CreateRegistryKey_Name_Description {
            get {
                return ResourceManager.GetString("CreateRegistryKey_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string CreateRegistryKey_Name_FriendlyName {
            get {
                return ResourceManager.GetString("CreateRegistryKey_Name_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the registry key where the new key will be created..
        /// </summary>
        public static string CreateRegistryKey_Path_Description {
            get {
                return ResourceManager.GetString("CreateRegistryKey_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string CreateRegistryKey_Path_FriendlyName {
            get {
                return ResourceManager.GetString("CreateRegistryKey_Path_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create the registry key with &lt;if(NAME)&gt;name &lt;NAME&gt;&lt;else&gt;a given name&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt;.
        /// </summary>
        public static string CreateRegistryKey_Summary {
            get {
                return ResourceManager.GetString("CreateRegistryKey_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes a registry key in the specified path..
        /// </summary>
        public static string DeleteRegistryKey_Description {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete registry key.
        /// </summary>
        public static string DeleteRegistryKey_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the registry key..
        /// </summary>
        public static string DeleteRegistryKey_Name_Description {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string DeleteRegistryKey_Name_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_Name_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the registry key where the key that will be deleted is located..
        /// </summary>
        public static string DeleteRegistryKey_Path_Description {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string DeleteRegistryKey_Path_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_Path_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete the registry key with &lt;if(NAME)&gt;name &lt;NAME&gt;&lt;else&gt;a given name&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt;.
        /// </summary>
        public static string DeleteRegistryKey_Summary {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the action fails if the registry key to be deleted does not exist..
        /// </summary>
        public static string DeleteRegistryKey_ThrowOnMissingSubKey_Description {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_ThrowOnMissingSubKey_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error on sub key missing.
        /// </summary>
        public static string DeleteRegistryKey_ThrowOnMissingSubKey_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteRegistryKey_ThrowOnMissingSubKey_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes a registry value in the specified path..
        /// </summary>
        public static string DeleteRegistryValue_Description {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete registry value.
        /// </summary>
        public static string DeleteRegistryValue_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the registry value..
        /// </summary>
        public static string DeleteRegistryValue_Name_Description {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string DeleteRegistryValue_Name_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_Name_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the registry value where the value that will be deleted is located..
        /// </summary>
        public static string DeleteRegistryValue_Path_Description {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string DeleteRegistryValue_Path_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_Path_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete the registry value with &lt;if(NAME)&gt;name &lt;NAME&gt;&lt;else&gt;a given name&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt;.
        /// </summary>
        public static string DeleteRegistryValue_Summary {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the action fails if the registry value to be deleted does not exist..
        /// </summary>
        public static string DeleteRegistryValue_ThrowOnMissingValue_Description {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_ThrowOnMissingValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error on sub value missing.
        /// </summary>
        public static string DeleteRegistryValue_ThrowOnMissingValue_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteRegistryValue_ThrowOnMissingValue_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set &lt;if(NAME)&gt;&lt;NAME&gt;&lt;else&gt;a value&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt; to &lt;if(DWORD)&gt;&lt;DWORD&gt;&lt;else&gt;a value&lt;endif&gt;.
        /// </summary>
        public static string DWord_Summary {
            get {
                return ResourceManager.GetString("DWord_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that there was a problem when executing the operation..
        /// </summary>
        public static string Error_UnknownError_Description {
            get {
                return ResourceManager.GetString("Error_UnknownError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation failed.
        /// </summary>
        public static string Error_UnknownError_FriendlyName {
            get {
                return ResourceManager.GetString("Error_UnknownError_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set &lt;if(NAME)&gt;&lt;NAME&gt;&lt;else&gt;a value&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt; to &lt;if(EXPANDSTRING)&gt;&lt;EXPANDSTRING&gt;&lt;else&gt;a value&lt;endif&gt;.
        /// </summary>
        public static string ExpandString_Summary {
            get {
                return ResourceManager.GetString("ExpandString_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value associated with name, with any embedded environment variables left unexpanded, or the value returned if name is not found..
        /// </summary>
        public static string GetRegistryValue_DefaultValue_Description {
            get {
                return ResourceManager.GetString("GetRegistryValue_DefaultValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Value.
        /// </summary>
        public static string GetRegistryValue_DefaultValue_FriendlyName {
            get {
                return ResourceManager.GetString("GetRegistryValue_DefaultValue_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the value of a name/value pair in the registry key..
        /// </summary>
        public static string GetRegistryValue_Description {
            get {
                return ResourceManager.GetString("GetRegistryValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the environment variables will be expanded if the registry value supports it..
        /// </summary>
        public static string GetRegistryValue_ExpandEnvironmentVariables_Description {
            get {
                return ResourceManager.GetString("GetRegistryValue_ExpandEnvironmentVariables_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expand Environment Variables.
        /// </summary>
        public static string GetRegistryValue_ExpandEnvironmentVariables_FriendlyName {
            get {
                return ResourceManager.GetString("GetRegistryValue_ExpandEnvironmentVariables_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get registry value.
        /// </summary>
        public static string GetRegistryValue_FriendlyName {
            get {
                return ResourceManager.GetString("GetRegistryValue_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the registry value..
        /// </summary>
        public static string GetRegistryValue_Name_Description {
            get {
                return ResourceManager.GetString("GetRegistryValue_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string GetRegistryValue_Name_FriendlyName {
            get {
                return ResourceManager.GetString("GetRegistryValue_Name_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the registry key where the value is located..
        /// </summary>
        public static string GetRegistryValue_Path_Description {
            get {
                return ResourceManager.GetString("GetRegistryValue_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string GetRegistryValue_Path_FriendlyName {
            get {
                return ResourceManager.GetString("GetRegistryValue_Path_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the value of &lt;if(NAME)&gt;&lt;NAME&gt;&lt;else&gt;a value&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt;.
        /// </summary>
        public static string GetRegistryValue_Summary {
            get {
                return ResourceManager.GetString("GetRegistryValue_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the name/value pair in the registry key..
        /// </summary>
        public static string GetRegistryValue_Value_Description {
            get {
                return ResourceManager.GetString("GetRegistryValue_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string GetRegistryValue_Value_FriendlyName {
            get {
                return ResourceManager.GetString("GetRegistryValue_Value_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set &lt;if(NAME)&gt;&lt;NAME&gt;&lt;else&gt;a value&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt; to &lt;if(MULTISTRING)&gt;&lt;MULTISTRING&gt;&lt;else&gt;a value&lt;endif&gt;.
        /// </summary>
        public static string MultiString_Summary {
            get {
                return ResourceManager.GetString("MultiString_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set &lt;if(NAME)&gt;&lt;NAME&gt;&lt;else&gt;a value&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt; to &lt;if(QWORD)&gt;&lt;QWORD&gt;&lt;else&gt;a value&lt;endif&gt;.
        /// </summary>
        public static string QWord_Summary {
            get {
                return ResourceManager.GetString("QWord_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary.
        /// </summary>
        public static string RegistryValueKind_Binary_FriendlyName {
            get {
                return ResourceManager.GetString("RegistryValueKind_Binary_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DWORD (32-bit).
        /// </summary>
        public static string RegistryValueKind_DWord_FriendlyName {
            get {
                return ResourceManager.GetString("RegistryValueKind_DWord_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expandable String.
        /// </summary>
        public static string RegistryValueKind_ExpandString_FriendlyName {
            get {
                return ResourceManager.GetString("RegistryValueKind_ExpandString_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi-String.
        /// </summary>
        public static string RegistryValueKind_MultiString_FriendlyName {
            get {
                return ResourceManager.GetString("RegistryValueKind_MultiString_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QWORD (64-bit).
        /// </summary>
        public static string RegistryValueKind_QWord_FriendlyName {
            get {
                return ResourceManager.GetString("RegistryValueKind_QWord_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String.
        /// </summary>
        public static string RegistryValueKind_String_FriendlyName {
            get {
                return ResourceManager.GetString("RegistryValueKind_String_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binary data..
        /// </summary>
        public static string SetRegistryValue_Binary_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_Binary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string SetRegistryValue_Binary_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_Binary_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the value of a name/value pair in the registry key..
        /// </summary>
        public static string SetRegistryValue_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The 32-bit number..
        /// </summary>
        public static string SetRegistryValue_DWord_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_DWord_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string SetRegistryValue_DWord_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_DWord_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string that contains unexpanded references to environment variables, for example: %PATH%..
        /// </summary>
        public static string SetRegistryValue_ExpandString_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_ExpandString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string SetRegistryValue_ExpandString_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_ExpandString_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set registry value.
        /// </summary>
        public static string SetRegistryValue_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of registry value..
        /// </summary>
        public static string SetRegistryValue_Kind_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_Kind_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Type.
        /// </summary>
        public static string SetRegistryValue_Kind_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_Kind_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sequence of strings..
        /// </summary>
        public static string SetRegistryValue_MultiString_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_MultiString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string SetRegistryValue_MultiString_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_MultiString_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the registry value..
        /// </summary>
        public static string SetRegistryValue_Name_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string SetRegistryValue_Name_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_Name_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the registry key where the value is located..
        /// </summary>
        public static string SetRegistryValue_Path_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string SetRegistryValue_Path_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_Path_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The 64-bit number..
        /// </summary>
        public static string SetRegistryValue_QWord_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_QWord_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string SetRegistryValue_QWord_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_QWord_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string..
        /// </summary>
        public static string SetRegistryValue_String_Description {
            get {
                return ResourceManager.GetString("SetRegistryValue_String_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string SetRegistryValue_String_FriendlyName {
            get {
                return ResourceManager.GetString("SetRegistryValue_String_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the value of &lt;if(NAME)&gt;&lt;NAME&gt;&lt;else&gt;a name/value pair&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt;.
        /// </summary>
        public static string SetRegistryValue_Summary {
            get {
                return ResourceManager.GetString("SetRegistryValue_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set &lt;if(NAME)&gt;&lt;NAME&gt;&lt;else&gt;a value&lt;endif&gt; in &lt;if(PATH)&gt;&lt;PATH&gt;&lt;else&gt;a specified path&lt;endif&gt; to &lt;if(STRING)&gt;&lt;STRING&gt;&lt;else&gt;a value&lt;endif&gt;.
        /// </summary>
        public static string String_Summary {
            get {
                return ResourceManager.GetString("String_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform operations related to the Windows Registry..
        /// </summary>
        public static string WindowsRegistry_Description {
            get {
                return ResourceManager.GetString("WindowsRegistry_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Registry.
        /// </summary>
        public static string WindowsRegistry_FriendlyName {
            get {
                return ResourceManager.GetString("WindowsRegistry_FriendlyName", resourceCulture);
            }
        }
    }
}
