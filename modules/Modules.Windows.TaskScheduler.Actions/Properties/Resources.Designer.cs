//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PowerAutomate.Desktop.Modules.Windows.TaskScheduler.Actions.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PowerAutomate.Desktop.Modules.Windows.TaskScheduler.Actions.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task at startup..
        /// </summary>
        public static string Boot_Summary {
            get {
                return ResourceManager.GetString("Boot_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string CreateTask_AccountDomain_Description {
            get {
                return ResourceManager.GetString("CreateTask_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string CreateTask_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTask_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a task with the specified name..
        /// </summary>
        public static string CreateTask_Description {
            get {
                return ResourceManager.GetString("CreateTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create task.
        /// </summary>
        public static string CreateTask_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTask_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string CreateTask_Password_Description {
            get {
                return ResourceManager.GetString("CreateTask_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string CreateTask_Password_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTask_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create task..
        /// </summary>
        public static string CreateTask_Summary {
            get {
                return ResourceManager.GetString("CreateTask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string CreateTask_TargetServer_Description {
            get {
                return ResourceManager.GetString("CreateTask_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string CreateTask_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTask_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string CreateTask_TaskName_Description {
            get {
                return ResourceManager.GetString("CreateTask_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string CreateTask_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTask_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string CreateTask_UserName_Description {
            get {
                return ResourceManager.GetString("CreateTask_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string CreateTask_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTask_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string CreateTaskAction_AccountDomain_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string CreateTaskAction_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The arguments associated with the command-line operation..
        /// </summary>
        public static string CreateTaskAction_Arguments_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_Arguments_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments.
        /// </summary>
        public static string CreateTaskAction_Arguments_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_Arguments_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates an action in the task with the specified name..
        /// </summary>
        public static string CreateTaskAction_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create action in task.
        /// </summary>
        public static string CreateTaskAction_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string CreateTaskAction_Password_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string CreateTaskAction_Password_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to an executable file..
        /// </summary>
        public static string CreateTaskAction_Path_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string CreateTaskAction_Path_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_Path_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create action in task..
        /// </summary>
        public static string CreateTaskAction_Summary {
            get {
                return ResourceManager.GetString("CreateTaskAction_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string CreateTaskAction_TargetServer_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string CreateTaskAction_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string CreateTaskAction_TaskName_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string CreateTaskAction_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string CreateTaskAction_UserName_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string CreateTaskAction_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory that contains either the executable file or the files that are used by the executable file..
        /// </summary>
        public static string CreateTaskAction_WorkingDirectory_Description {
            get {
                return ResourceManager.GetString("CreateTaskAction_WorkingDirectory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working Directory.
        /// </summary>
        public static string CreateTaskAction_WorkingDirectory_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskAction_WorkingDirectory_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string CreateTaskTrigger_AccountDomain_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string CreateTaskTrigger_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interval between days..
        /// </summary>
        public static string CreateTaskTrigger_DaysInterval_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_DaysInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days Interval.
        /// </summary>
        public static string CreateTaskTrigger_DaysInterval_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_DaysInterval_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The days of the month..
        /// </summary>
        public static string CreateTaskTrigger_DaysOfMonth_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_DaysOfMonth_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days Of Month.
        /// </summary>
        public static string CreateTaskTrigger_DaysOfMonth_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_DaysOfMonth_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The days of the week..
        /// </summary>
        public static string CreateTaskTrigger_DaysOfWeek_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_DaysOfWeek_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days Of Week.
        /// </summary>
        public static string CreateTaskTrigger_DaysOfWeek_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_DaysOfWeek_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time between when the trigger is fired and when the task is executed..
        /// </summary>
        public static string CreateTaskTrigger_Delay_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Delay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay.
        /// </summary>
        public static string CreateTaskTrigger_Delay_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Delay_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a trigger for the task with the specified name..
        /// </summary>
        public static string CreateTaskTrigger_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the trigger is enabled..
        /// </summary>
        public static string CreateTaskTrigger_Enabled_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Enabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        public static string CreateTaskTrigger_Enabled_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Enabled_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The date and time when the trigger is deactivated. The trigger can&apos;t start the task after it is deactivated..
        /// </summary>
        public static string CreateTaskTrigger_EndBoundary_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_EndBoundary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expires On.
        /// </summary>
        public static string CreateTaskTrigger_EndBoundary_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_EndBoundary_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create trigger for task.
        /// </summary>
        public static string CreateTaskTrigger_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier of the trigger..
        /// </summary>
        public static string CreateTaskTrigger_Id_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Id_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID.
        /// </summary>
        public static string CreateTaskTrigger_Id_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Id_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The months of the year..
        /// </summary>
        public static string CreateTaskTrigger_MonthsOfYear_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_MonthsOfYear_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Months Of Year.
        /// </summary>
        public static string CreateTaskTrigger_MonthsOfYear_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_MonthsOfYear_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string CreateTaskTrigger_Password_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string CreateTaskTrigger_Password_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The delay time that is randomly added to the start time of the trigger..
        /// </summary>
        public static string CreateTaskTrigger_RandomDelay_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RandomDelay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random Delay.
        /// </summary>
        public static string CreateTaskTrigger_RandomDelay_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RandomDelay_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration that the pattern is repeated. The minimum time allowed is one minute. If zero is specified, the pattern is repeated indefinitely..
        /// </summary>
        public static string CreateTaskTrigger_RepetitionDuration_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RepetitionDuration_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duration.
        /// </summary>
        public static string CreateTaskTrigger_RepetitionDuration_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RepetitionDuration_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time in days between each restart of the task. The value must be between 1 minute and 31 days..
        /// </summary>
        public static string CreateTaskTrigger_RepetitionInterval_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RepetitionInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval.
        /// </summary>
        public static string CreateTaskTrigger_RepetitionInterval_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RepetitionInterval_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether a running instance of the task is stopped at the end of repetition pattern duration..
        /// </summary>
        public static string CreateTaskTrigger_RepetitionStopAtDurationEnd_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RepetitionStopAtDurationEnd_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop At End of Repetition Duration.
        /// </summary>
        public static string CreateTaskTrigger_RepetitionStopAtDurationEnd_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RepetitionStopAtDurationEnd_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the task runs on the last day of the month..
        /// </summary>
        public static string CreateTaskTrigger_RunOnLastDayOfMonth_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RunOnLastDayOfMonth_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run On Last Day Of Month.
        /// </summary>
        public static string CreateTaskTrigger_RunOnLastDayOfMonth_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_RunOnLastDayOfMonth_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The date and time when the trigger is activated..
        /// </summary>
        public static string CreateTaskTrigger_StartBoundary_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_StartBoundary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string CreateTaskTrigger_StartBoundary_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_StartBoundary_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The kind of Terminal Server session change that will trigger the task launch..
        /// </summary>
        public static string CreateTaskTrigger_State_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_State_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State.
        /// </summary>
        public static string CreateTaskTrigger_State_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_State_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XPath query string that identifies the event that fires the trigger..
        /// </summary>
        public static string CreateTaskTrigger_Subscription_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Subscription_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subscription.
        /// </summary>
        public static string CreateTaskTrigger_Subscription_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Subscription_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create trigger for task..
        /// </summary>
        public static string CreateTaskTrigger_Summary {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string CreateTaskTrigger_TargetServer_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string CreateTaskTrigger_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string CreateTaskTrigger_TaskName_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string CreateTaskTrigger_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of time that the task launched by this trigger is allowed to run..
        /// </summary>
        public static string CreateTaskTrigger_Timeout_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Timeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout.
        /// </summary>
        public static string CreateTaskTrigger_Timeout_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Timeout_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of trigger..
        /// </summary>
        public static string CreateTaskTrigger_Type_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Type_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string CreateTaskTrigger_Type_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_Type_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier of the user. For example, &quot;MyDomain\MyName&quot; or for a local account, &quot;Administrator&quot;..
        /// </summary>
        public static string CreateTaskTrigger_UserId_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_UserId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User ID.
        /// </summary>
        public static string CreateTaskTrigger_UserId_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_UserId_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string CreateTaskTrigger_UserName_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string CreateTaskTrigger_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection of named XPath queries. Each query in the collection is applied to the last matching event XML returned from the subscription query..
        /// </summary>
        public static string CreateTaskTrigger_ValueQueries_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_ValueQueries_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Queries.
        /// </summary>
        public static string CreateTaskTrigger_ValueQueries_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_ValueQueries_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interval between weeks..
        /// </summary>
        public static string CreateTaskTrigger_WeeksInterval_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_WeeksInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weeks Interval.
        /// </summary>
        public static string CreateTaskTrigger_WeeksInterval_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_WeeksInterval_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The weeks of the month..
        /// </summary>
        public static string CreateTaskTrigger_WeeksOfMonth_Description {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_WeeksOfMonth_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weeks Of Month.
        /// </summary>
        public static string CreateTaskTrigger_WeeksOfMonth_FriendlyName {
            get {
                return ResourceManager.GetString("CreateTaskTrigger_WeeksOfMonth_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task on a daily schedule..
        /// </summary>
        public static string Daily_Summary {
            get {
                return ResourceManager.GetString("Daily_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string DeleteTask_AccountDomain_Description {
            get {
                return ResourceManager.GetString("DeleteTask_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string DeleteTask_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTask_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes a task with the specified name..
        /// </summary>
        public static string DeleteTask_Description {
            get {
                return ResourceManager.GetString("DeleteTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete task.
        /// </summary>
        public static string DeleteTask_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTask_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string DeleteTask_Password_Description {
            get {
                return ResourceManager.GetString("DeleteTask_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string DeleteTask_Password_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTask_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete task..
        /// </summary>
        public static string DeleteTask_Summary {
            get {
                return ResourceManager.GetString("DeleteTask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string DeleteTask_TargetServer_Description {
            get {
                return ResourceManager.GetString("DeleteTask_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string DeleteTask_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTask_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string DeleteTask_TaskName_Description {
            get {
                return ResourceManager.GetString("DeleteTask_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string DeleteTask_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTask_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string DeleteTask_UserName_Description {
            get {
                return ResourceManager.GetString("DeleteTask_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string DeleteTask_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTask_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string DeleteTaskAction_AccountDomain_Description {
            get {
                return ResourceManager.GetString("DeleteTaskAction_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string DeleteTaskAction_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskAction_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier of the action..
        /// </summary>
        public static string DeleteTaskAction_ActionId_Description {
            get {
                return ResourceManager.GetString("DeleteTaskAction_ActionId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action ID.
        /// </summary>
        public static string DeleteTaskAction_ActionId_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskAction_ActionId_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes a action of the task with the specified name..
        /// </summary>
        public static string DeleteTaskAction_Description {
            get {
                return ResourceManager.GetString("DeleteTaskAction_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete action of task.
        /// </summary>
        public static string DeleteTaskAction_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskAction_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string DeleteTaskAction_Password_Description {
            get {
                return ResourceManager.GetString("DeleteTaskAction_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string DeleteTaskAction_Password_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskAction_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete action of task..
        /// </summary>
        public static string DeleteTaskAction_Summary {
            get {
                return ResourceManager.GetString("DeleteTaskAction_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string DeleteTaskAction_TargetServer_Description {
            get {
                return ResourceManager.GetString("DeleteTaskAction_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string DeleteTaskAction_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskAction_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string DeleteTaskAction_TaskName_Description {
            get {
                return ResourceManager.GetString("DeleteTaskAction_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string DeleteTaskAction_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskAction_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string DeleteTaskAction_UserName_Description {
            get {
                return ResourceManager.GetString("DeleteTaskAction_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string DeleteTaskAction_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskAction_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string DeleteTaskTrigger_AccountDomain_Description {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string DeleteTaskTrigger_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes a trigger for the task with the specified name..
        /// </summary>
        public static string DeleteTaskTrigger_Description {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete trigger for task.
        /// </summary>
        public static string DeleteTaskTrigger_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string DeleteTaskTrigger_Password_Description {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string DeleteTaskTrigger_Password_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete trigger for task..
        /// </summary>
        public static string DeleteTaskTrigger_Summary {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string DeleteTaskTrigger_TargetServer_Description {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string DeleteTaskTrigger_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string DeleteTaskTrigger_TaskName_Description {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string DeleteTaskTrigger_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier of the trigger..
        /// </summary>
        public static string DeleteTaskTrigger_TriggerId_Description {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_TriggerId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger ID.
        /// </summary>
        public static string DeleteTaskTrigger_TriggerId_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_TriggerId_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string DeleteTaskTrigger_UserName_Description {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string DeleteTaskTrigger_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("DeleteTaskTrigger_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that the folder was not found..
        /// </summary>
        public static string Error_FolderNotFoundError_Description {
            get {
                return ResourceManager.GetString("Error_FolderNotFoundError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder not found.
        /// </summary>
        public static string Error_FolderNotFoundError_FriendlyName {
            get {
                return ResourceManager.GetString("Error_FolderNotFoundError_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that the action was not found..
        /// </summary>
        public static string Error_TaskActionNotFoundError_Description {
            get {
                return ResourceManager.GetString("Error_TaskActionNotFoundError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action not found.
        /// </summary>
        public static string Error_TaskActionNotFoundError_FriendlyName {
            get {
                return ResourceManager.GetString("Error_TaskActionNotFoundError_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that there was a problem when executing the action operation..
        /// </summary>
        public static string Error_TaskActionUnknownError_Description {
            get {
                return ResourceManager.GetString("Error_TaskActionUnknownError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action operation failed.
        /// </summary>
        public static string Error_TaskActionUnknownError_FriendlyName {
            get {
                return ResourceManager.GetString("Error_TaskActionUnknownError_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that the task was not found..
        /// </summary>
        public static string Error_TaskNotFoundError_Description {
            get {
                return ResourceManager.GetString("Error_TaskNotFoundError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task not found.
        /// </summary>
        public static string Error_TaskNotFoundError_FriendlyName {
            get {
                return ResourceManager.GetString("Error_TaskNotFoundError_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that the trigger was not found..
        /// </summary>
        public static string Error_TaskTriggerNotFoundError_Description {
            get {
                return ResourceManager.GetString("Error_TaskTriggerNotFoundError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger not found.
        /// </summary>
        public static string Error_TaskTriggerNotFoundError_FriendlyName {
            get {
                return ResourceManager.GetString("Error_TaskTriggerNotFoundError_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that there was a problem when executing the trigger operation..
        /// </summary>
        public static string Error_TaskTriggerUnknownError_Description {
            get {
                return ResourceManager.GetString("Error_TaskTriggerUnknownError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger operation failed.
        /// </summary>
        public static string Error_TaskTriggerUnknownError_FriendlyName {
            get {
                return ResourceManager.GetString("Error_TaskTriggerUnknownError_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that there was a problem when executing the operation..
        /// </summary>
        public static string Error_UnknownError_Description {
            get {
                return ResourceManager.GetString("Error_UnknownError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation failed.
        /// </summary>
        public static string Error_UnknownError_FriendlyName {
            get {
                return ResourceManager.GetString("Error_UnknownError_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task on an event..
        /// </summary>
        public static string Event_Summary {
            get {
                return ResourceManager.GetString("Event_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string ExportTask_AccountDomain_Description {
            get {
                return ResourceManager.GetString("ExportTask_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string ExportTask_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("ExportTask_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exports the task with the specified name..
        /// </summary>
        public static string ExportTask_Description {
            get {
                return ResourceManager.GetString("ExportTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the file..
        /// </summary>
        public static string ExportTask_FileName_Description {
            get {
                return ResourceManager.GetString("ExportTask_FileName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name.
        /// </summary>
        public static string ExportTask_FileName_FriendlyName {
            get {
                return ResourceManager.GetString("ExportTask_FileName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export task.
        /// </summary>
        public static string ExportTask_FriendlyName {
            get {
                return ResourceManager.GetString("ExportTask_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string ExportTask_Password_Description {
            get {
                return ResourceManager.GetString("ExportTask_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string ExportTask_Password_FriendlyName {
            get {
                return ResourceManager.GetString("ExportTask_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export the task..
        /// </summary>
        public static string ExportTask_Summary {
            get {
                return ResourceManager.GetString("ExportTask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string ExportTask_TargetServer_Description {
            get {
                return ResourceManager.GetString("ExportTask_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string ExportTask_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("ExportTask_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string ExportTask_TaskName_Description {
            get {
                return ResourceManager.GetString("ExportTask_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string ExportTask_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("ExportTask_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string ExportTask_UserName_Description {
            get {
                return ResourceManager.GetString("ExportTask_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string ExportTask_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("ExportTask_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string GetFolderTasks_AccountDomain_Description {
            get {
                return ResourceManager.GetString("GetFolderTasks_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string GetFolderTasks_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("GetFolderTasks_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the list of tasks in the specified folder..
        /// </summary>
        public static string GetFolderTasks_Description {
            get {
                return ResourceManager.GetString("GetFolderTasks_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The regular expression to use as name filter..
        /// </summary>
        public static string GetFolderTasks_Filter_Description {
            get {
                return ResourceManager.GetString("GetFolderTasks_Filter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter.
        /// </summary>
        public static string GetFolderTasks_Filter_FriendlyName {
            get {
                return ResourceManager.GetString("GetFolderTasks_Filter_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the folder containing the tasks..
        /// </summary>
        public static string GetFolderTasks_FolderPath_Description {
            get {
                return ResourceManager.GetString("GetFolderTasks_FolderPath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder.
        /// </summary>
        public static string GetFolderTasks_FolderPath_FriendlyName {
            get {
                return ResourceManager.GetString("GetFolderTasks_FolderPath_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get tasks in folder.
        /// </summary>
        public static string GetFolderTasks_FriendlyName {
            get {
                return ResourceManager.GetString("GetFolderTasks_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string GetFolderTasks_Password_Description {
            get {
                return ResourceManager.GetString("GetFolderTasks_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string GetFolderTasks_Password_FriendlyName {
            get {
                return ResourceManager.GetString("GetFolderTasks_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get tasks in folder..
        /// </summary>
        public static string GetFolderTasks_Summary {
            get {
                return ResourceManager.GetString("GetFolderTasks_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string GetFolderTasks_TargetServer_Description {
            get {
                return ResourceManager.GetString("GetFolderTasks_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string GetFolderTasks_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("GetFolderTasks_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The names of the tasks in the folder..
        /// </summary>
        public static string GetFolderTasks_TaskNames_Description {
            get {
                return ResourceManager.GetString("GetFolderTasks_TaskNames_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Names.
        /// </summary>
        public static string GetFolderTasks_TaskNames_FriendlyName {
            get {
                return ResourceManager.GetString("GetFolderTasks_TaskNames_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string GetFolderTasks_UserName_Description {
            get {
                return ResourceManager.GetString("GetFolderTasks_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string GetFolderTasks_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("GetFolderTasks_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string GetTask_AccountDomain_Description {
            get {
                return ResourceManager.GetString("GetTask_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string GetTask_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("GetTask_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the task with the specified name..
        /// </summary>
        public static string GetTask_Description {
            get {
                return ResourceManager.GetString("GetTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string GetTask_FileName_Description {
            get {
                return ResourceManager.GetString("GetTask_FileName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name.
        /// </summary>
        public static string GetTask_FileName_FriendlyName {
            get {
                return ResourceManager.GetString("GetTask_FileName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get task.
        /// </summary>
        public static string GetTask_FriendlyName {
            get {
                return ResourceManager.GetString("GetTask_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string GetTask_Password_Description {
            get {
                return ResourceManager.GetString("GetTask_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string GetTask_Password_FriendlyName {
            get {
                return ResourceManager.GetString("GetTask_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the task..
        /// </summary>
        public static string GetTask_Summary {
            get {
                return ResourceManager.GetString("GetTask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string GetTask_TargetServer_Description {
            get {
                return ResourceManager.GetString("GetTask_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string GetTask_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("GetTask_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task..
        /// </summary>
        public static string GetTask_Task_Description {
            get {
                return ResourceManager.GetString("GetTask_Task_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task.
        /// </summary>
        public static string GetTask_Task_FriendlyName {
            get {
                return ResourceManager.GetString("GetTask_Task_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string GetTask_TaskName_Description {
            get {
                return ResourceManager.GetString("GetTask_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string GetTask_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("GetTask_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string GetTask_UserName_Description {
            get {
                return ResourceManager.GetString("GetTask_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string GetTask_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("GetTask_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string GetTaskActions_AccountDomain_Description {
            get {
                return ResourceManager.GetString("GetTaskActions_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string GetTaskActions_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskActions_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The actions of the task..
        /// </summary>
        public static string GetTaskActions_Actions_Description {
            get {
                return ResourceManager.GetString("GetTaskActions_Actions_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actions.
        /// </summary>
        public static string GetTaskActions_Actions_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskActions_Actions_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the list of actions in the specified task..
        /// </summary>
        public static string GetTaskActions_Description {
            get {
                return ResourceManager.GetString("GetTaskActions_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get actions in task.
        /// </summary>
        public static string GetTaskActions_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskActions_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string GetTaskActions_Password_Description {
            get {
                return ResourceManager.GetString("GetTaskActions_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string GetTaskActions_Password_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskActions_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get actions in task..
        /// </summary>
        public static string GetTaskActions_Summary {
            get {
                return ResourceManager.GetString("GetTaskActions_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string GetTaskActions_TargetServer_Description {
            get {
                return ResourceManager.GetString("GetTaskActions_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string GetTaskActions_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskActions_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string GetTaskActions_TaskName_Description {
            get {
                return ResourceManager.GetString("GetTaskActions_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string GetTaskActions_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskActions_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string GetTaskActions_UserName_Description {
            get {
                return ResourceManager.GetString("GetTaskActions_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string GetTaskActions_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskActions_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string GetTaskTriggers_AccountDomain_Description {
            get {
                return ResourceManager.GetString("GetTaskTriggers_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string GetTaskTriggers_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskTriggers_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the list of triggers for a task with the specified name..
        /// </summary>
        public static string GetTaskTriggers_Description {
            get {
                return ResourceManager.GetString("GetTaskTriggers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get triggers for task.
        /// </summary>
        public static string GetTaskTriggers_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskTriggers_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string GetTaskTriggers_Password_Description {
            get {
                return ResourceManager.GetString("GetTaskTriggers_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string GetTaskTriggers_Password_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskTriggers_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get triggers for task..
        /// </summary>
        public static string GetTaskTriggers_Summary {
            get {
                return ResourceManager.GetString("GetTaskTriggers_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string GetTaskTriggers_TargetServer_Description {
            get {
                return ResourceManager.GetString("GetTaskTriggers_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string GetTaskTriggers_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskTriggers_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string GetTaskTriggers_TaskName_Description {
            get {
                return ResourceManager.GetString("GetTaskTriggers_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string GetTaskTriggers_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskTriggers_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The triggers for the task..
        /// </summary>
        public static string GetTaskTriggers_Triggers_Description {
            get {
                return ResourceManager.GetString("GetTaskTriggers_Triggers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggers.
        /// </summary>
        public static string GetTaskTriggers_Triggers_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskTriggers_Triggers_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string GetTaskTriggers_UserName_Description {
            get {
                return ResourceManager.GetString("GetTaskTriggers_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string GetTaskTriggers_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("GetTaskTriggers_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The advanced settings..
        /// </summary>
        public static string Group_Advanced_Description {
            get {
                return ResourceManager.GetString("Group_Advanced_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        public static string Group_Advanced_FriendlyName {
            get {
                return ResourceManager.GetString("Group_Advanced_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The general settings..
        /// </summary>
        public static string Group_General_Description {
            get {
                return ResourceManager.GetString("Group_General_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string Group_General_FriendlyName {
            get {
                return ResourceManager.GetString("Group_General_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task on idle..
        /// </summary>
        public static string Idle_Summary {
            get {
                return ResourceManager.GetString("Idle_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string ImportTask_AccountDomain_Description {
            get {
                return ResourceManager.GetString("ImportTask_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string ImportTask_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("ImportTask_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imports the task with the specified name..
        /// </summary>
        public static string ImportTask_Description {
            get {
                return ResourceManager.GetString("ImportTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the file..
        /// </summary>
        public static string ImportTask_FileName_Description {
            get {
                return ResourceManager.GetString("ImportTask_FileName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name.
        /// </summary>
        public static string ImportTask_FileName_FriendlyName {
            get {
                return ResourceManager.GetString("ImportTask_FileName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import task.
        /// </summary>
        public static string ImportTask_FriendlyName {
            get {
                return ResourceManager.GetString("ImportTask_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string ImportTask_Password_Description {
            get {
                return ResourceManager.GetString("ImportTask_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string ImportTask_Password_FriendlyName {
            get {
                return ResourceManager.GetString("ImportTask_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import the task..
        /// </summary>
        public static string ImportTask_Summary {
            get {
                return ResourceManager.GetString("ImportTask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string ImportTask_TargetServer_Description {
            get {
                return ResourceManager.GetString("ImportTask_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string ImportTask_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("ImportTask_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string ImportTask_TaskName_Description {
            get {
                return ResourceManager.GetString("ImportTask_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string ImportTask_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("ImportTask_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string ImportTask_UserName_Description {
            get {
                return ResourceManager.GetString("ImportTask_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string ImportTask_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("ImportTask_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task at log on..
        /// </summary>
        public static string Logon_Summary {
            get {
                return ResourceManager.GetString("Logon_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task on a monthly schedule..
        /// </summary>
        public static string Monthly_Summary {
            get {
                return ResourceManager.GetString("Monthly_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task on a monthly schedule at a day of the week..
        /// </summary>
        public static string MonthlyDayOfWeek_Summary {
            get {
                return ResourceManager.GetString("MonthlyDayOfWeek_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task at task creation/modification..
        /// </summary>
        public static string Registration_Summary {
            get {
                return ResourceManager.GetString("Registration_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task on session state change..
        /// </summary>
        public static string SessionStateChange_Summary {
            get {
                return ResourceManager.GetString("SessionStateChange_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When connected to the user session from local computer..
        /// </summary>
        public static string SessionStateChangeType_ConsoleConnect_Description {
            get {
                return ResourceManager.GetString("SessionStateChangeType_ConsoleConnect_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On connected from user session from local computer.
        /// </summary>
        public static string SessionStateChangeType_ConsoleConnect_FriendlyName {
            get {
                return ResourceManager.GetString("SessionStateChangeType_ConsoleConnect_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disconnected from the user session from local computer..
        /// </summary>
        public static string SessionStateChangeType_ConsoleDisconnect_Description {
            get {
                return ResourceManager.GetString("SessionStateChangeType_ConsoleDisconnect_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On disconnected from user session from local computer.
        /// </summary>
        public static string SessionStateChangeType_ConsoleDisconnect_FriendlyName {
            get {
                return ResourceManager.GetString("SessionStateChangeType_ConsoleDisconnect_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When connected to the user session from remote computer..
        /// </summary>
        public static string SessionStateChangeType_RemoteConnect_Description {
            get {
                return ResourceManager.GetString("SessionStateChangeType_RemoteConnect_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On connected from user session from remote computer.
        /// </summary>
        public static string SessionStateChangeType_RemoteConnect_FriendlyName {
            get {
                return ResourceManager.GetString("SessionStateChangeType_RemoteConnect_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disconnected from the user session from remote computer..
        /// </summary>
        public static string SessionStateChangeType_RemoteDisconnect_Description {
            get {
                return ResourceManager.GetString("SessionStateChangeType_RemoteDisconnect_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On disconnected from user session from remote computer.
        /// </summary>
        public static string SessionStateChangeType_RemoteDisconnect_FriendlyName {
            get {
                return ResourceManager.GetString("SessionStateChangeType_RemoteDisconnect_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the workstation is locked..
        /// </summary>
        public static string SessionStateChangeType_SessionLock_Description {
            get {
                return ResourceManager.GetString("SessionStateChangeType_SessionLock_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On workstation locked.
        /// </summary>
        public static string SessionStateChangeType_SessionLock_FriendlyName {
            get {
                return ResourceManager.GetString("SessionStateChangeType_SessionLock_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the workstation is unlocked..
        /// </summary>
        public static string SessionStateChangeType_SessionUnlock_Description {
            get {
                return ResourceManager.GetString("SessionStateChangeType_SessionUnlock_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On workstation unlocked.
        /// </summary>
        public static string SessionStateChangeType_SessionUnlock_FriendlyName {
            get {
                return ResourceManager.GetString("SessionStateChangeType_SessionUnlock_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string StartTask_AccountDomain_Description {
            get {
                return ResourceManager.GetString("StartTask_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string StartTask_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("StartTask_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starts the task with the specified name..
        /// </summary>
        public static string StartTask_Description {
            get {
                return ResourceManager.GetString("StartTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start task.
        /// </summary>
        public static string StartTask_FriendlyName {
            get {
                return ResourceManager.GetString("StartTask_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string StartTask_Password_Description {
            get {
                return ResourceManager.GetString("StartTask_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string StartTask_Password_FriendlyName {
            get {
                return ResourceManager.GetString("StartTask_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the task..
        /// </summary>
        public static string StartTask_Summary {
            get {
                return ResourceManager.GetString("StartTask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string StartTask_TargetServer_Description {
            get {
                return ResourceManager.GetString("StartTask_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string StartTask_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("StartTask_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string StartTask_TaskName_Description {
            get {
                return ResourceManager.GetString("StartTask_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string StartTask_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("StartTask_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string StartTask_UserName_Description {
            get {
                return ResourceManager.GetString("StartTask_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string StartTask_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("StartTask_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string StopTask_AccountDomain_Description {
            get {
                return ResourceManager.GetString("StopTask_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string StopTask_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("StopTask_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops the task with the specified name..
        /// </summary>
        public static string StopTask_Description {
            get {
                return ResourceManager.GetString("StopTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop task.
        /// </summary>
        public static string StopTask_FriendlyName {
            get {
                return ResourceManager.GetString("StopTask_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string StopTask_Password_Description {
            get {
                return ResourceManager.GetString("StopTask_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string StopTask_Password_FriendlyName {
            get {
                return ResourceManager.GetString("StopTask_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop the task..
        /// </summary>
        public static string StopTask_Summary {
            get {
                return ResourceManager.GetString("StopTask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string StopTask_TargetServer_Description {
            get {
                return ResourceManager.GetString("StopTask_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string StopTask_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("StopTask_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string StopTask_TaskName_Description {
            get {
                return ResourceManager.GetString("StopTask_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string StopTask_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("StopTask_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string StopTask_UserName_Description {
            get {
                return ResourceManager.GetString("StopTask_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string StopTask_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("StopTask_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task one time..
        /// </summary>
        public static string Time_Summary {
            get {
                return ResourceManager.GetString("Time_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string ToggleTask_AccountDomain_Description {
            get {
                return ResourceManager.GetString("ToggleTask_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string ToggleTask_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTask_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables the task with the specified name..
        /// </summary>
        public static string ToggleTask_Description {
            get {
                return ResourceManager.GetString("ToggleTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the task is enabled..
        /// </summary>
        public static string ToggleTask_Enabled_Description {
            get {
                return ResourceManager.GetString("ToggleTask_Enabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        public static string ToggleTask_Enabled_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTask_Enabled_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/disable task.
        /// </summary>
        public static string ToggleTask_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTask_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string ToggleTask_Password_Description {
            get {
                return ResourceManager.GetString("ToggleTask_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string ToggleTask_Password_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTask_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;if(ENABLED)&gt;Enables&lt;endif&gt;Disables&lt;endif&gt; the task..
        /// </summary>
        public static string ToggleTask_Summary {
            get {
                return ResourceManager.GetString("ToggleTask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string ToggleTask_TargetServer_Description {
            get {
                return ResourceManager.GetString("ToggleTask_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string ToggleTask_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTask_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string ToggleTask_TaskName_Description {
            get {
                return ResourceManager.GetString("ToggleTask_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string ToggleTask_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTask_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string ToggleTask_UserName_Description {
            get {
                return ResourceManager.GetString("ToggleTask_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string ToggleTask_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTask_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the account..
        /// </summary>
        public static string ToggleTaskTrigger_AccountDomain_Description {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_AccountDomain_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Domain.
        /// </summary>
        public static string ToggleTaskTrigger_AccountDomain_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_AccountDomain_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables the trigger for the task with the specified name..
        /// </summary>
        public static string ToggleTaskTrigger_Description {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the trigger of the task is enabled..
        /// </summary>
        public static string ToggleTaskTrigger_Enabled_Description {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_Enabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        public static string ToggleTaskTrigger_Enabled_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_Enabled_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/disable task trigger.
        /// </summary>
        public static string ToggleTaskTrigger_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password that is used to connect to the computer. If the username and password are not specified, then the current token is used..
        /// </summary>
        public static string ToggleTaskTrigger_Password_Description {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string ToggleTaskTrigger_Password_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_Password_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;if(ENABLED)&gt;Enables&lt;endif&gt;Disables&lt;endif&gt; the task trigger..
        /// </summary>
        public static string ToggleTaskTrigger_Summary {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the computer to connect to. If empty, then the connection will be to the local computer..
        /// </summary>
        public static string ToggleTaskTrigger_TargetServer_Description {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_TargetServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        public static string ToggleTaskTrigger_TargetServer_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_TargetServer_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the task. It can&apos;t begin or end with a space character. The &apos;.&apos; character can&apos;t be used to specify the current task folder and the &apos;..&apos; characters can&apos;t be used to specify the parent task folder in the path..
        /// </summary>
        public static string ToggleTaskTrigger_TaskName_Description {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_TaskName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        public static string ToggleTaskTrigger_TaskName_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_TaskName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier of the trigger..
        /// </summary>
        public static string ToggleTaskTrigger_TriggerId_Description {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_TriggerId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger ID.
        /// </summary>
        public static string ToggleTaskTrigger_TriggerId_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_TriggerId_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username that is used during the connection to the computer. If not specified, then the current token is used..
        /// </summary>
        public static string ToggleTaskTrigger_UserName_Description {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string ToggleTaskTrigger_UserName_FriendlyName {
            get {
                return ResourceManager.GetString("ToggleTaskTrigger_UserName_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the workstation starts up..
        /// </summary>
        public static string TriggerType_Boot_Description {
            get {
                return ResourceManager.GetString("TriggerType_Boot_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At startup.
        /// </summary>
        public static string TriggerType_Boot_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Boot_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered on a daily schedule..
        /// </summary>
        public static string TriggerType_Daily_Description {
            get {
                return ResourceManager.GetString("TriggerType_Daily_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On a daily schedule.
        /// </summary>
        public static string TriggerType_Daily_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Daily_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered by an event..
        /// </summary>
        public static string TriggerType_Event_Description {
            get {
                return ResourceManager.GetString("TriggerType_Event_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On an event.
        /// </summary>
        public static string TriggerType_Event_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Event_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered when the workstation goes idle..
        /// </summary>
        public static string TriggerType_Idle_Description {
            get {
                return ResourceManager.GetString("TriggerType_Idle_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On idle.
        /// </summary>
        public static string TriggerType_Idle_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Idle_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered when logged on..
        /// </summary>
        public static string TriggerType_Logon_Description {
            get {
                return ResourceManager.GetString("TriggerType_Logon_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At log on.
        /// </summary>
        public static string TriggerType_Logon_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Logon_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered on a monthly schedule..
        /// </summary>
        public static string TriggerType_Monthly_Description {
            get {
                return ResourceManager.GetString("TriggerType_Monthly_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On a monthly schedule.
        /// </summary>
        public static string TriggerType_Monthly_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Monthly_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered on a monthly schedule by day of the week..
        /// </summary>
        public static string TriggerType_MonthlyDayOfWeek_Description {
            get {
                return ResourceManager.GetString("TriggerType_MonthlyDayOfWeek_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On a monthly schedule by day of the week.
        /// </summary>
        public static string TriggerType_MonthlyDayOfWeek_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_MonthlyDayOfWeek_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered when a task is created or modified..
        /// </summary>
        public static string TriggerType_Registration_Description {
            get {
                return ResourceManager.GetString("TriggerType_Registration_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At task creation/modification.
        /// </summary>
        public static string TriggerType_Registration_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Registration_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered when the state of the session changes..
        /// </summary>
        public static string TriggerType_SessionStateChange_Description {
            get {
                return ResourceManager.GetString("TriggerType_SessionStateChange_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On session state change.
        /// </summary>
        public static string TriggerType_SessionStateChange_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_SessionStateChange_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered only one time..
        /// </summary>
        public static string TriggerType_Time_Description {
            get {
                return ResourceManager.GetString("TriggerType_Time_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One time.
        /// </summary>
        public static string TriggerType_Time_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Time_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggered on a weekly schedule..
        /// </summary>
        public static string TriggerType_Weekly_Description {
            get {
                return ResourceManager.GetString("TriggerType_Weekly_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On a weekly schedule.
        /// </summary>
        public static string TriggerType_Weekly_FriendlyName {
            get {
                return ResourceManager.GetString("TriggerType_Weekly_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a trigger to execute a task on a weekly schedule..
        /// </summary>
        public static string Weekly_Summary {
            get {
                return ResourceManager.GetString("Weekly_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform operations related to the Windows Task Scheduler..
        /// </summary>
        public static string WindowsTaskScheduler_Description {
            get {
                return ResourceManager.GetString("WindowsTaskScheduler_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Task Scheduler.
        /// </summary>
        public static string WindowsTaskScheduler_FriendlyName {
            get {
                return ResourceManager.GetString("WindowsTaskScheduler_FriendlyName", resourceCulture);
            }
        }
    }
}
